openapi: 3.1.0
info:
  title: E-commerce API
  version: "1.0.0"
  description: >
    이 문서는 E-commerce 서비스의 주요 API를 정의합니다.
    사용자 잔액 충전, 상품 조회, 주문/결제, 쿠폰 발급 등 기능을 제공합니다.

servers:
  - url: https://api.example.com
    description: Production server
  - url: https://api.dev.example.com
    description: Development server

tags:
  - name: Users
    description: 사용자 관련 API
  - name: Products
    description: 상품 관련 API
  - name: Orders
    description: 주문/결제 관련 API

paths:
  /api/v1/users/{userId}/balance:
    post:
      tags:
        - Users
      summary: 사용자 잔액 충전
      description: 사용자 ID와 충전 금액을 받아 잔액을 충전한다.
      operationId: chargeUserBalance
      parameters:
        - name: userId
          in: path
          required: true
          description: 잔액을 충전할 사용자 ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BalanceChargeRequest"
      responses:
        "204":
          description: 충전 완료 (No Content)
          headers:
            Location:
              description: 해당 리소스의 URI
              schema:
                type: string
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                invalidAmount:
                  summary: 유효하지 않은 금액 요청
                  value:
                    errorCode: "INVALID_AMOUNT_REQUEST"
                    message: "충전 요청 금액이 올바르지 않습니다."
    get:
      tags:
        - Users
      summary: 사용자 잔액 조회
      description: 사용자 ID를 받아 사용자의 현재 잔액을 조회한다.
      operationId: getUserBalance
      parameters:
        - name: userId
          in: path
          required: true
          description: 조회할 사용자 ID
          schema:
            type: string
      responses:
        "200":
          description: 잔액 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BalanceResponse"
        "404":
          description: 해당 사용자를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/products:
    get:
      tags:
        - Products
      summary: 상품 리스트 조회
      description: 페이지 번호, 페이지 크기, 정렬 기준을 받아 상품 목록을 조회한다.
      operationId: getProducts
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: 페이지 번호 (기본값 0)
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 500
          description: 페이지 크기 (기본값 10)
        - name: sort
          in: query
          required: false
          schema:
            type: string
          description: "정렬 기준 (예: price,asc)"
      responses:
        "200":
          description: 상품 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductListResponse"

  /api/v1/users/{userId}/coupons:
    get:
      tags:
        - Users
      summary: 유저가 보유한 쿠폰 조회
      description: 특정 사용자(ID)가 보유한 쿠폰 목록을 조회한다.
      operationId: getUserCoupons
      parameters:
        - name: userId
          in: path
          required: true
          description: 쿠폰을 조회할 사용자 ID
          schema:
            type: string
      responses:
        "200":
          description: 쿠폰 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CouponResponse"
        "404":
          description: 해당 사용자를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/users/{userId}/coupons/{couponId}:
    post:
      tags:
        - Users
      summary: 선착순 할인 쿠폰 발급
      description: 사용자 ID를 받아 선착순 할인 쿠폰을 발급한다.
      operationId: issueCoupon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CouponIssueRequest"
      responses:
        "201":
          description: 쿠폰 발급 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponResponse"
        "409":
          description: 쿠폰 소진 (매진)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                couponSoldOut:
                  summary: 쿠폰 소진
                  value:
                    errorCode: "COUPON_SOLD_OUT"
                    message: "쿠폰이 모두 소진되었습니다."

  /api/v1/orders:
    post:
      tags:
        - Orders
      summary: 상품 주문/결제
      description: 사용자 ID, 상품 정보, (선택) 쿠폰 ID를 받아 주문/결제를 진행한다.
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
      responses:
        "201":
          description: 주문/결제 성공
          headers:
            Location:
              description: 생성된 주문 리소스의 URI
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                    description: 주문 ID
        "400":
          description: 잘못된 요청(잔액 부족, 재고 부족, 쿠폰 문제 등)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                insufficientBalance:
                  summary: 잔액 부족
                  value:
                    errorCode: "INSUFFICIENT_BALANCE"
                    message: "잔액이 부족합니다."
                insufficientStock:
                  summary: 재고 부족
                  value:
                    errorCode: "INSUFFICIENT_STOCK"
                    message: "재고가 부족합니다."
                invalidCoupon:
                  summary: 유효하지 않은 쿠폰
                  value:
                    errorCode: "INVALID_COUPON"
                    message: "유효하지 않은 쿠폰입니다."

  /api/v1/products/top-sold:
    get:
      tags:
        - Products
      summary: 상위 상품 조회 (판매량 기준)
      description: 특정 기간 동안 가장 많이 팔린 상품을 조회한다.
      operationId: getTopSoldProducts
      parameters:
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          description: "조회 시작 일자 (예: 2021-08-01)"
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          description: "조회 종료 일자 (예: 2021-08-31)"
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: 페이지 번호 (기본값 0)
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 500
          description: 페이지 크기 (기본값 10)
      responses:
        "200":
          description: 상위 상품 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopSoldProductListResponse"

components:
  schemas:
    # ---------- [ Users / Balance ] ----------
    BalanceChargeRequest:
      type: object
      properties:
        amount:
          type: integer
          description: 충전 요청 금액
          minimum: 1
          maximum: 2100000000
      required:
        - amount

    BalanceResponse:
      type: object
      properties:
        userId:
          type: string
          description: 사용자 ID
        balance:
          type: integer
          description: 현재 잔액
      required:
        - userId
        - balance

    # ---------- [ Products ] ----------
    ProductListResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/ProductItem"
        page:
          type: integer
          description: 현재 페이지 번호
        size:
          type: integer
          description: 페이지 크기
        totalElements:
          type: integer
          description: 전체 요소 수
        totalPages:
          type: integer
          description: 전체 페이지 수
        sort:
          type: string
          description: 정렬 기준
      required:
        - content

    ProductItem:
      type: object
      properties:
        productId:
          type: string
        productName:
          type: string
        price:
          type: integer
        stockQuantity:
          type: integer
        createdAt:
          type: string
          format: date-time
      required:
        - productId
        - productName
        - price
        - stockQuantity
        - createdAt

    TopSoldProductListResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/TopSoldProductItem"
        page:
          type: integer
        size:
          type: integer
        totalElements:
          type: integer
        totalPages:
          type: integer

    TopSoldProductItem:
      type: object
      properties:
        productId:
          type: string
        productName:
          type: string
        soldCount:
          type: integer
      required:
        - productId
        - productName
        - soldCount

    # ---------- [ Coupons ] ----------
    CouponIssueRequest:
      type: object
      properties:
        userId:
          type: string
      required:
        - userId

    CouponResponse:
      type: object
      properties:
        couponId:
          type: string
        couponName:
          type: string
        receivedAt:
          type: string
          format: date-time
      required:
        - couponId
        - couponName
        - receivedAt

    # ---------- [ Orders ] ----------
    OrderRequest:
      type: object
      properties:
        userId:
          type: string
        products:
          type: array
          items:
            $ref: "#/components/schemas/OrderProductItem"
        couponId:
          type: string
          nullable: true
      required:
        - userId
        - products

    OrderProductItem:
      type: object
      properties:
        productId:
          type: string
        quantity:
          type: integer
      required:
        - productId
        - quantity

    # ---------- [ Error ] ----------
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: string
        message:
          type: string
      required:
        - errorCode
        - message
